/*
	shalrath.qc
*/










/*
==============================================================================

SHAL-RATH

==============================================================================
*/
$cd id1/models/shalrath
$origin 0 0 24
$base base
$skin skin
$scale 0.7

$frame attack1 attack2 attack3 attack4 attack5 attack6 attack7 attack8
$frame attack9 attack10 attack11

$frame pain1 pain2 pain3 pain4 pain5 

$frame death1 death2 death3 death4 death5 death6 death7

$frame	walk1 walk2 walk3 walk4 walk5 walk6 walk7 walk8 walk9 walk10
$frame	walk11 walk12

void(entity attacker, float damage) shalrath_pain;
void() ShalMissile;
void() shal_stand     =[      $walk1,       shal_stand    ] {COOP_Idle();};

void() shal_walk1     =[      $walk2,       shal_walk2    ] {
if (random() < 0.2)
	sound (self, 2, "shalrath/idle.wav", 1, 2);
COOP_Walk(6);};
void() shal_walk2     =[      $walk3,       shal_walk3    ] {COOP_Walk(4);};
void() shal_walk3     =[      $walk4,       shal_walk4    ] {COOP_Walk(0);};
void() shal_walk4     =[      $walk5,       shal_walk5    ] {COOP_Walk(0);};
void() shal_walk5     =[      $walk6,       shal_walk6    ] {COOP_Walk(0);};
void() shal_walk6     =[      $walk7,       shal_walk7    ] {COOP_Walk(0);};
void() shal_walk7     =[      $walk8,       shal_walk8    ] {COOP_Walk(5);};
void() shal_walk8     =[      $walk9,       shal_walk9    ] {COOP_Walk(6);};
void() shal_walk9     =[      $walk10,       shal_walk10    ] {COOP_Walk(5);};
void() shal_walk10    =[      $walk11,       shal_walk11    ] {COOP_Walk(0);};
void() shal_walk11    =[      $walk12,       shal_walk12    ] {COOP_Walk(4);};
void() shal_walk12    =[      $walk1,       shal_walk1    ] {COOP_Walk(5);};

void() shal_run1     =[      $walk2,       shal_run2    ] {
if (random() < 0.2)
	sound (self, 2, "shalrath/idle.wav", 1, 2);
COOP_Run(6);};
void() shal_run2     =[      $walk3,       shal_run3    ] {COOP_Run(4);};
void() shal_run3     =[      $walk4,       shal_run4    ] {COOP_Run(0);};
void() shal_run4     =[      $walk5,       shal_run5    ] {COOP_Run(0);};
void() shal_run5     =[      $walk6,       shal_run6    ] {COOP_Run(0);};
void() shal_run6     =[      $walk7,       shal_run7    ] {COOP_Run(0);};
void() shal_run7     =[      $walk8,       shal_run8    ] {COOP_Run(5);};
void() shal_run8     =[      $walk9,       shal_run9    ] {COOP_Run(6);};
void() shal_run9     =[      $walk10,       shal_run10    ] {COOP_Run(5);};
void() shal_run10    =[      $walk11,       shal_run11    ] {COOP_Run(0);};
void() shal_run11    =[      $walk12,       shal_run12    ] {COOP_Run(4);};
void() shal_run12    =[      $walk1,       shal_run1    ] {COOP_Run(5);};

void() shal_attack1     =[      $attack1,       shal_attack2    ] {
sound (self, 2, "shalrath/attack.wav", 1, 1);
COOP_Turn();
};
void() shal_attack2     =[      $attack2,       shal_attack3    ] {COOP_Turn();};
void() shal_attack3     =[      $attack3,       shal_attack4    ] {COOP_Turn();};
void() shal_attack4     =[      $attack4,       shal_attack5    ] {COOP_Turn();};
void() shal_attack5     =[      $attack5,       shal_attack6    ] {COOP_Turn();};
void() shal_attack6     =[      $attack6,       shal_attack7    ] {COOP_Turn();};
void() shal_attack7     =[      $attack7,       shal_attack8    ] {COOP_Turn();};
void() shal_attack8     =[      $attack8,       shal_attack9    ] {COOP_Turn();};
void() shal_attack9     =[      $attack9,       shal_attack10   ] {ShalMissile();};
void() shal_attack10    =[      $attack10,      shal_attack11   ] {COOP_Turn();};
void() shal_attack11    =[      $attack11,      shal_run1   ] {};

void() shal_pain1       =[      $pain1, shal_pain2      ] {};
void() shal_pain2       =[      $pain2, shal_pain3      ] {};
void() shal_pain3       =[      $pain3, shal_pain4      ] {};
void() shal_pain4       =[      $pain4, shal_pain5      ] {};
void() shal_pain5       =[      $pain5, shal_run1      ] {};

void() shal_death1      =[      $death1,        shal_death2     ] {};
void() shal_death2      =[      $death2,        shal_death3     ] {};
void() shal_death3      =[      $death3,        shal_death4     ] {};
void() shal_death4      =[      $death4,        shal_death5     ] {};
void() shal_death5      =[      $death5,        shal_death6     ] {};
void() shal_death6      =[      $death6,        shal_death7     ] {};
void() shal_death7      =[      $death7,        shal_death7    ] {MonsterCorpse();};


void(entity attacker, float damage) shalrath_pain =
{
	if (self.pain_finished > time)
		return;

	sound (self, 2, "shalrath/pain.wav", 1, 1);
	shal_pain1();
	self.pain_finished = time + 3;
};

void() shalrath_die =
{
// check for gib
	if (self.health < -90)
	{
		sound (self, 2, "player/udeath.wav", 1, 1);
		ThrowMonsterHead ("progs/h_shal.mdl", self.health);
		ThrowGib("progs/gib1.mdl", -40, 1, 0, 1, 0);
		ThrowGib("progs/gib2.mdl", -40, 1, 0, 3, 0);
		ThrowGib("progs/gib3.mdl", -40, 1, 0, 2, 0);
		remove (self);
		return;
	}

	sound (self, 2, "shalrath/death.wav", 1, 1);
	shal_death1();
	self.solid = 0;
};

/*
================
ShalMissile
================
*/
void() ShalMissileTouch;
void() ShalHome;
void() ShalMissile =
{
	local	entity 	missile;
	local	vector	dir;
	local	float	dist, flytime;

	dir = normalize((self.enemy.origin + '0 0 10') - self.origin);
	dist = vlen (self.enemy.origin - self.origin);
	flytime = dist * 0.002;
	if (flytime < 0.1)
		flytime = 0.1;

	muzzleflash ();
	sound (self, 1, "shalrath/attack2.wav", 1, 1);

	missile = spawn ();
	missile.owner = self;

	missile.solid = 2;
	missile.movetype = 9;
	setmodel (missile, "progs/v_spike.mdl");

	setsize (missile, '0 0 0', '0 0 0');		

	missile.origin = self.origin + '0 0 10';
	missile.velocity = dir * 400;
	missile.avelocity = '300 300 300';
	missile.nextthink = flytime + time;
	missile.think = ShalHome;
	missile.enemy = self.enemy;
	missile.touch = ShalMissileTouch;
	missile.dest = self.dest;
};

void() ShalHome =
{
	local vector	dir, vtemp;
	vtemp = self.enemy.origin + self.dest;
	if (self.enemy.health < 1)
	{
		remove(self);
		return;
	}
	dir = normalize(vtemp - self.origin);
	self.velocity = dir * 350;
	self.nextthink = time + 0.2;
	self.think = ShalHome;	
};

void() ShalMissileTouch =
{
	if (other == self.owner)
		return;		// don't explode on owner

	// Gizmo - I changed enemy monster classnames to prevent any current or future conflicts with summons
	if (other.classname == "idmonster_zombie")
		T_Damage (other, self, self.owner, 200);	
	T_RadiusDamage (self, self.owner, 80, world);
	sound (self, 1, "weapons/r_exp3.wav", 1, 1);

	WriteByte (4, 23);
	WriteByte (4, 3);
	WriteCoord (4, self.origin_x);
	WriteCoord (4, self.origin_y);
	WriteCoord (4, self.origin_z);
	multicast (self.origin, 1);

	remove (self);
};

//=================================================================

float() ShalOnSight =
{
	sound (self, 2, "shalrath/sight.wav", 1, 1);
	return 1;
};

/*QUAKED monster_shalrath (1 0 0) (-32 -32 -24) (32 32 48) Ambush
*/
void() monster_shalrath =
{
	if ( deathmatch ) {
		remove( self );
		return;
	}

	self.classname = "idmonster_shalrath";

	if (!server_spawned) {
		precache_model2 ("progs/shalrath.mdl");
		precache_model2 ("progs/h_shal.mdl");
		precache_model2 ("progs/v_spike.mdl");
	
		precache_sound2 ("shalrath/attack.wav");
		precache_sound2 ("shalrath/attack2.wav");
		precache_sound2 ("shalrath/death.wav");
		precache_sound2 ("shalrath/idle.wav");
		precache_sound2 ("shalrath/pain.wav");
		precache_sound2 ("shalrath/sight.wav");
	}
	
	self.solid = 3;
	self.movetype = 4;

	self.mdl = "progs/h_shal.mdl";
	setmodel (self, "progs/shalrath.mdl");
	setsize (self, '-32 -32 -24', '32 32 64');
	self.max_health = self.health = 1000;

	self.th_stand = shal_stand;
	self.th_walk = shal_walk1;
	self.th_run = shal_run1;
	self.th_die = shalrath_die;
	self.th_pain = shalrath_pain;
	self.th_missile = shal_attack1;


	self.netname = "vore";

	// weight: bigger than MEDIUM, but less than LARGE
	self.monsterweight = 380;
	self.monsterflags = 0;

	// monsters have a team of their own
	if ( !self.team_no )
		self.team_no = 100;
	self.team_str_carried = "XX";

	self.is_connected = 1;

	self.OnNoticeEnemy = ShalOnSight;
	self.think1 = monster_shalrath;
	COOP_SetLives ();

	self.ff_count = 0.75;
	self.hover_time = 1.25;

	coop_walkmonster_start();
};



